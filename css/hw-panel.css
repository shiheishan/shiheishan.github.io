.subject,
#subjects > .card{
  background: #fff;
  border:1px solid var(--border); border-radius:18px;
  box-shadow: var(--shadow);
  padding:14px 16px; margin-bottom:14px;
  transition: transform var(--dur-med) var(--ease-standard), opacity var(--dur-med) var(--ease-standard);
  will-change: transform;
}
.subject-title{ font-weight:700; font-size:18px; margin:2px 0 8px; letter-spacing:.2px; }
:is(.tasks, .list){ margin:0; padding:0; list-style:none; }
@property --p{ syntax: '<number>'; initial-value: 0; inherits: false; }
:is(.task, .cell){ display:flex; align-items:center; gap:12px; padding:10px 6px; border-radius:12px; position:relative; }
:is(.task, .cell):hover{ background:linear-gradient(180deg, rgba(0,0,0,.04), transparent); }
:is(.task, .cell) input{ position:absolute; opacity:0; pointer-events:none; }
.checkbox,
.switch{
  width:22px; height:22px; border-radius:8px; border:1px solid var(--border);
  background:linear-gradient(180deg,#fff,#f3f4f6);
  box-shadow:inset 0 1px 0 rgba(255,255,255,.8);
  display:inline-grid; place-items:center; flex:0 0 22px; position:relative; overflow:hidden;
}
.checkbox::after,
.switch::after{
  content:""; position:absolute; left:5px; top:11px; width:12px; height:6px;
  border-left:3px solid var(--accent); border-bottom:3px solid var(--accent);
  transform: rotate(-45deg) scale(0); transform-origin: left bottom;
  transition: transform var(--dur-med) var(--ease-standard), opacity var(--dur-med) var(--ease-standard);
}
.text{
  position:relative; font-size:16px; letter-spacing:.2px; line-height:1.4;
  color:transparent; -webkit-background-clip:text; background-clip:text;
  background-image: linear-gradient(90deg,
    rgba(0,0,0,.55) 0%,
    rgba(0,0,0,.55) calc((var(--p)*100% - 2%)),
    rgba(0,0,0,1) calc(var(--p)*100%),
    rgba(0,0,0,1) 100%
  );
}
.text::after{
  content:""; position:absolute; left:0; right:0; top:50%; height:2px; border-radius:2px; background:var(--strike);
  transform: translateY(-50%) scaleX(var(--p)); transform-origin: left center; transition: transform var(--dur-med) var(--ease-standard), opacity var(--dur-med) var(--ease-standard);
}

.subject, #subjects > .card{
  border: none;
  border-radius: var(--radius-lg, 16px);
  background: var(--surface, #fff);
  box-shadow: var(--shadow-1);
  padding: 16px;
}
.subject-title{ font-size: 20px; line-height: 1.2; font-weight: 600; margin: 8px 0 6px; }

.cell{
  min-height: 52px;
  padding: 12px 16px;
  border-bottom: 1px solid var(--separator);
  display: flex;
  align-items: center;
  gap: 12px;
}

.task{
  display: grid;
  grid-template-columns: 24px 1fr;
  align-items: center;
  column-gap: 12px;
  min-height: 44px;
}
.task .checkbox{
  width: 22px; height: 22px;
  border: 2px solid var(--separator);
  border-radius: 999px;
  display: inline-grid;
  place-items: center;
  background: var(--surface);
  transition: border-color var(--dur-med) var(--ease-standard), background-color var(--dur-med) var(--ease-standard), transform 100ms var(--ease-standard);
}
.task .checkbox::after{
  content: ""; width: 10px; height: 6px;
  border: 2px solid #fff;
  border-top: 0; border-left: 0;
  transform: rotate(45deg) scale(0.8);
  opacity: 0;
  transition: opacity var(--dur-med) var(--ease-standard), transform var(--dur-med) var(--ease-standard);
}
.task:active .checkbox{ transform: scale(.96); }

.task .text{
  position: relative;
  display: inline-block;
  font-size: 17px;
  line-height: 1.47;
  transition: color var(--dur-med) var(--ease-standard);
}
.task .text::after{
  content: ""; position: absolute;
  left: 0; right: 0;
  top: 0.6em; height: 1px;
  background: var(--strike-color, rgba(0,0,0,.5));
  transform-origin: left center;
  transform: scaleX(0) translateZ(0);
  transition: transform var(--dur-med) var(--ease-standard);
  pointer-events: none;
  will-change: transform;
}

.task input[type="checkbox"]:checked ~ .checkbox{
  background: var(--tint);
  border-color: var(--tint);
}
.task input[type="checkbox"]:checked ~ .checkbox::after{
  opacity: 1; transform: rotate(45deg) scale(1);
}
.task input[type="checkbox"]:checked ~ .text{
  color: var(--secondary-label);
}
.task input[type="checkbox"]:checked ~ .text::after{
  transform: scaleX(1) translateZ(0);
}

@media (prefers-reduced-motion: reduce){
  .task .text, .task .text::after, .task .checkbox, .task .checkbox::after{ transition: none; }
}

@media (prefers-color-scheme: dark){
  .task .checkbox{ border-color: var(--separator); background: var(--surface); }
  .task .text::after{ background: color-mix(in srgb, var(--label) 55%, transparent); }
}
